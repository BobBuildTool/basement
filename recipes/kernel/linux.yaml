inherit: [make]

metaEnvironment:
    PKG_VERSION: "5.3.9"

checkoutSCM:
    scm: url
    url: https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-${PKG_VERSION}.tar.xz
    digestSHA1: "4e733c7be714d7c17a11e1cdcc831dd2a072018c"
    stripComponents: 1

buildTools: [bison, flex, host-toolchain]
buildVars: [ARCH]
buildScript: |
    # prevent timestamps in configuration
    export KCONFIG_NOTIMESTAMP=1
    export KBUILD_BUILD_TIMESTAMP='Mon Dec 28 22:49:40 CET 2015'

    # Compute the arch path, since i386 and x86_64 are in arch/x86 and not
    # in arch/$(KERNEL_ARCH). Even if the kernel creates symbolic links
    # for bzImage, arch/i386 and arch/x86_64 do not exist when copying the
    # defconfig file.
    if [[ $ARCH = i386 ]] ; then
        LINUX_ARCH_PATH=arch/x86
    elif [[ $ARCH = x86_64 ]] ; then
        LINUX_ARCH_PATH=arch/x86
    else
        LINUX_ARCH_PATH=arch/${ARCH}
    fi
    echo "$LINUX_ARCH_PATH" > .arch-path

    # Use plain "defconfig" if we have no specific target. Otherwise check if
    # defconfig has changed.
    if [[ ${LINUX_CONFIG:+true} ]] ; then
        if [[ ( ! -e ".config" ) || ( "$1/${LINUX_ARCH_PATH}/configs/${LINUX_CONFIG}_defconfig" -nt ".config" ) ]] ; then
            make -C "$1" O=$PWD "${LINUX_CONFIG}_defconfig"
        fi
    else
        if [[ ! -e ".config" ]] ; then
            make -C "$1" O=$PWD defconfig
        fi
    fi

multiPackage:
    "":
        buildTools: [target-toolchain]
        buildVars: [CROSS_COMPILE, LINUX_CONFIG]
        buildScript: |
            makeParallel bzImage modules dtbs

        multiPackage:
            image:
                packageScript: |
                    read LINUX_ARCH_PATH < $1/.arch-path
                    mkdir -p boot/overlays
                    cp -a $1/$LINUX_ARCH_PATH/boot/zImage boot/
                    cp -a $1/$LINUX_ARCH_PATH/boot/dts/*.dtb boot/
                    #cp -a $1/$LINUX_ARCH_PATH/boot/dts/overlays/*.dtb* boot/overlays/

            modules:
                packageScript: |
                    make -C $1 INSTALL_MOD_PATH=$PWD modules_install

    headers:
        buildScript: |
            make headers_install
        packageScript: |
            cp -a $1/usr .

