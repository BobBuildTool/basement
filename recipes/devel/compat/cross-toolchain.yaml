depends:
    - devel::compat::gcc-cross

buildVars: [AUTOCONF_TARGET]
buildScript: |
    rm -rf *
    cp -an $2/* .
    mkdir -p usr/sysroots/$AUTOCONF_TARGET/usr/lib
    cp -an ${BOB_DEP_PATHS[libs::compat::glibc]}/* usr/sysroots/$AUTOCONF_TARGET
    rsync -aHSK usr/$AUTOCONF_TARGET/lib/ \
      usr/sysroots/$AUTOCONF_TARGET/usr/lib/ \
      --include '*.so.*' \
      --exclude '*'

packageScript: |
    cp -a $1/* .

provideTools:
    target-toolchain:
        path: "usr/bin"
        environment:
            # usual compiler variables
            AR: "${AUTOCONF_TARGET}-ar"
            AS: "${AUTOCONF_TARGET}-as"
            CC: "${AUTOCONF_TARGET}-gcc"
            CPP: "${AUTOCONF_TARGET}-cpp"
            CXX: "${AUTOCONF_TARGET}-g++"
            GDB: "${AUTOCONF_TARGET}-gdb"
            LD: "${AUTOCONF_TARGET}-ld"
            NM: "${AUTOCONF_TARGET}-nm"
            OBJCOPY: "${AUTOCONF_TARGET}-objcopy"
            OBJDUMP: "${AUTOCONF_TARGET}-objdump"
            RANLIB: "${AUTOCONF_TARGET}-ranlib"
            STRIP: "${AUTOCONF_TARGET}-strip"

            # meta information
            ARCH: "${ARCH}"
            AUTOCONF_HOST: "${AUTOCONF_TARGET}"
            CROSS_COMPILE: "${AUTOCONF_TARGET}-"
            TOOLCHAIN_SYSROOT: "../sysroots/${AUTOCONF_TARGET}"

            # compiler flags
            CPPFLAGS:   "-Wdate-time"
            CFLAGS:     "-O${BASEMENT_OPTIMIZE}$(if-then-else,${BASEMENT_DEBUG}, -g,) -pipe"
            CXXFLAGS:   "-O${BASEMENT_OPTIMIZE}$(if-then-else,${BASEMENT_DEBUG}, -g,) -pipe"
            LDFLAGS:    "-Wl,-O1 -Wl,--hash-style=gnu"
