inherit: [make, install, patch, libtool]

metaEnvironment:
    PKG_VERSION: "9.2.0"

depends:
    - libs::gmp-dev
    - libs::mpfr-dev
    - libs::mpc-dev
    - libs::isl-dev

    - use: []
      depends:
        - libs::gmp-tgt
        - libs::mpfr-tgt
        - libs::mpc-tgt
        - libs::isl-tgt

checkoutSCM:
    scm: url
    url: ${GNU_MIRROR}/gcc/gcc-${PKG_VERSION}/gcc-${PKG_VERSION}.tar.xz
    digestSHA256: "ea6ef08f121239da5695f76c9b33637a118dcf63e24164422231917fa61fb206"
    stripComponents: 1

checkoutDeterministic: True
checkoutScript: |
    patchApplySeries -p1 \
        $<<gcc/0001-squash-multilib-libdir-suffix.patch>>

buildTools: [host-toolchain]
buildVars: [AUTOCONF_BUILD, AUTOCONF_HOST, AUTOCONF_TARGET,
            GCC_TARGET_ARCH, GCC_TARGET_FLOAT_ABI, GCC_TARGET_FPU,
            GCC_MULTILIB]
buildScript: |
    GCC_SRC=$1
    buildGcc()
    {
        mkdir -p build install
        pushd build
        if [[ $GCC_SRC/configure -nt .configure.stamp ]] ; then
            $GCC_SRC/configure \
                --build=${AUTOCONF_BUILD} \
                --host=${AUTOCONF_HOST} \
                --target=${AUTOCONF_TARGET:-${AUTOCONF_HOST}} \
                --prefix=/usr \
                ${GCC_TARGET_ARCH:+--with-arch=$GCC_TARGET_ARCH} \
                ${GCC_TARGET_FPU:+--with-fpu=$GCC_TARGET_FPU} \
                ${GCC_TARGET_FLOAT_ABI:+--with-float=$GCC_TARGET_FLOAT_ABI} \
                --enable-initfini-array \
                "${@}" \
                --disable-gtk-doc \
                --disable-gtk-doc-html \
                --disable-doc \
                --disable-docs \
                --disable-documentation \
                --disable-debug \
                --with-xmlto=no \
                --with-fop=no \
                --with-gmp-include=${BOB_DEP_PATHS[libs::gmp-dev]}/usr/include \
                --with-gmp-lib=${BOB_DEP_PATHS[libs::gmp-dev]}/usr/lib \
                --with-mpfr-include=${BOB_DEP_PATHS[libs::mpfr-dev]}/usr/include \
                --with-mpfr-lib=${BOB_DEP_PATHS[libs::mpfr-dev]}/usr/lib \
                --with-mpc-include=${BOB_DEP_PATHS[libs::mpc-dev]}/usr/include \
                --with-mpc-lib=${BOB_DEP_PATHS[libs::mpc-dev]}/usr/lib \
                --with-isl-include=${BOB_DEP_PATHS[libs::isl-dev]}/usr/include \
                --with-isl-lib=${BOB_DEP_PATHS[libs::isl-dev]}/usr/lib
            touch .configure.stamp
        fi
        makeParallel
        make install DESTDIR=${PWD}/../install
        popd
    }

packageScript: |
    # copy everything
    installPackageDev "$1/install/" "*"

multiPackage:
    cross-bare:
        depends:
            -
                name: devel::binutils
                use: [result, tools]
        buildTools: [binutils]
        buildScript: |
            if [[ -z "${GCC_MULTILIB:-}" ]] ; then
                MULTILIB=--disable-multilib
            else
                MULTILIB="--with-multilib-list=$GCC_MULTILIB"
            fi

            buildGcc \
                --with-glibc-version=2.11                      \
                --with-sysroot=/does/not/exist                 \
                --with-newlib                                  \
                --without-headers                              \
                --disable-nls                                  \
                "$MULTILIB"                                    \
                --disable-decimal-float                        \
                --disable-threads                              \
                --disable-libatomic                            \
                --disable-libgomp                              \
                --disable-libmpx                               \
                --disable-libquadmath                          \
                --disable-libssp                               \
                --disable-libvtv                               \
                --disable-libstdcxx                            \
                --disable-shared                               \
                --disable-bootstrap                            \
                --enable-languages=c,c++
            cp -a ${BOB_DEP_PATHS[devel::binutils]}/* install/

        packageScript: |
            installStripAll usr/bin

        provideTools:
            target-toolchain:
                path: usr/bin
                environment:
                    # usual compiler variables
                    AR: "${AUTOCONF_TARGET}-ar"
                    AS: "${AUTOCONF_TARGET}-as"
                    CC: "${AUTOCONF_TARGET}-gcc"
                    CPP: "${AUTOCONF_TARGET}-cpp"
                    CXX: "${AUTOCONF_TARGET}-g++"
                    GDB: "${AUTOCONF_TARGET}-gdb"
                    LD: "${AUTOCONF_TARGET}-ld"
                    NM: "${AUTOCONF_TARGET}-nm"
                    OBJCOPY: "${AUTOCONF_TARGET}-objcopy"
                    OBJDUMP: "${AUTOCONF_TARGET}-objdump"
                    RANLIB: "${AUTOCONF_TARGET}-ranlib"
                    STRIP: "${AUTOCONF_TARGET}-strip"

                    # Host system definition. Note that we do not touch the build
                    # system definiton (AUTOCONF_BUILD) because this is a cross
                    # compiling toolchain.
                    ARCH: "${ARCH}"
                    AUTOCONF_HOST: "${AUTOCONF_TARGET}"
                    CROSS_COMPILE: "${AUTOCONF_TARGET}-"

                    # compiler flags
                    CPPFLAGS:   "-Wdate-time"
                    CFLAGS:     "-Os -pipe"
                    CXXFLAGS:   "-Os -pipe"
                    LDFLAGS:    "-Wl,-O1 -Wl,--hash-style=gnu"

    cross:
        depends:
            - name: devel::binutils
              use: [result, tools]
            - name: libs::glibc-dev
              if: "$(eq,${GCC_LIBC},glibc)"
            - name: libs::newlib-dev
              if: "$(eq,${GCC_LIBC},newlib)"

        buildTools: [binutils]
        buildVars: [GCC_LIBC, GCC_ENABLE_LANGUAGES]
        buildScript: |
            if [[ -z "${GCC_MULTILIB:-}" ]] ; then
                MULTILIB=--disable-multilib
            else
                MULTILIB="--with-multilib-list=$GCC_MULTILIB"
            fi

            buildGcc \
                --with-sysroot=/usr/sysroots/${AUTOCONF_TARGET} \
                --with-build-sysroot=${BOB_DEP_PATHS[libs::${GCC_LIBC}-dev]} \
                --enable-linker-build-id                                    \
                "$MULTILIB"                                                 \
                --enable-languages="${GCC_ENABLE_LANGUAGES:-c,c++}"
            cp -a ${BOB_DEP_PATHS[devel::binutils]}/* install/

        packageScript: |
            installStripAll usr/bin

        provideDeps:
            - libs::glibc-dev
            - libs::newlib-dev

    native:
        buildTools: [target-toolchain]
        buildVars: [TOOLCHAIN_SYSROOT, GCC_PREFIX, GCC_ENABLE_LANGUAGES]
        buildScript: |
            TARGET_SYSROOT="${GCC_PREFIX:-/usr}/sysroots/${AUTOCONF_HOST}"
            buildGcc \
                ${GCC_PREFIX:+--prefix=${GCC_PREFIX}} \
                --with-sysroot="${TARGET_SYSROOT}" \
                --with-build-sysroot=${BOB_TOOL_PATHS[target-toolchain]}/$TOOLCHAIN_SYSROOT \
                --enable-linker-build-id                                                    \
                --enable-threads=posix                                                      \
                --disable-multilib                                                          \
                --enable-languages="${GCC_ENABLE_LANGUAGES:-c,c++}"

            # add sysroot
            mkdir -p "install/${TARGET_SYSROOT}"
            cp -an ${BOB_TOOL_PATHS[target-toolchain]}/$TOOLCHAIN_SYSROOT/* "install/${TARGET_SYSROOT}"

        packageScript: |
            installStripAll toolchain/bin

        provideDeps: [ "*-tgt" ]
