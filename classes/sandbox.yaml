shared: True

buildTools: [target-toolchain]
buildVars: [CROSS_COMPILE, TOOLCHAIN_SYSROOT]
buildScript: |
    # start from scratch
    rm -rf *

    # copy rootfs
    cp -an ${BOB_TOOL_PATHS[target-toolchain]}/$TOOLCHAIN_SYSROOT/* .
    for dep in "${BOB_DEP_PATHS[@]}" ; do
       cp -an ${dep}/* .
    done

    # symlink sh
    ln -sf bash usr/bin/sh

    # Everything should be in /usr. The only exception allowed here is the
    # dynamic linker. Move remaining stuff to /usr/...
    for i in lib lib32 lib64 ; do
        if [[ -d $i ]] ; then
            mkdir -p usr/$i
            for l in $i/* ; do
                if [[ -L $l ]] ; then
                    ln -rs "$(readlink -f "$l")" usr/$l
                else
                    mv $l usr/$l
                fi
            done
            rm -rf $i
            ln -sf usr/$i $i
        fi
    done
    ln -sT usr/bin bin
    ln -sf usr/lib lib
    ln -sT usr/sbin sbin

    # remove development stuff
    rm -rf usr/include
    find usr/lib \( -name '*.a' -o -name '*.o' \) -delete
    find . -type d -name .debug | xargs /bin/rm -rf
    find . -not -path ./toolchain/sysroots -executable -type f -exec ${CROSS_COMPILE}strip -g {} \;

    # remove locales and codepages
    rm -rf usr/share/locale usr/lib/gconv

    # Create an empty resolv.conf. The host version is mounted over this one
    # when entering the sandbox.
    touch etc/resolv.conf

    # the sandbox uses "nobody" as user
    cat >etc/passwd <<EOF
    root:x:0:0:root:/root:/bin/bash
    nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
    EOF
    cat >etc/group <<EOF
    root:x:0:
    nogroup:x:65534:
    EOF
    ln -s ../proc/self/mounts etc/mtab

packageScript: |
    cp -a $1/* .

provideSandbox:
    paths: ["/usr/bin"]
    mount:
        - "/etc/resolv.conf"
        - "/dev/pts"

