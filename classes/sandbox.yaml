shared: True

buildTools: [target-toolchain]
buildVars: [AUTOCONF_HOST, CROSS_COMPILE, TOOLCHAIN_SYSROOT, MULTIARCH_HOST]
buildScript: |
    # start from scratch
    rm -rf *

    # copy rootfs
    cp -an ${BOB_TOOL_PATHS[target-toolchain]}/$TOOLCHAIN_SYSROOT/* .
    for dep in "${BOB_DEP_PATHS[@]}" ; do
       cp -an ${dep}/* .
    done

    # symlink sh
    ln -sf bash usr/bin/sh

    # Everything should be in /usr. The only exception allowed here is the
    # dynamic linker. Move it if exists.
    for i in lib lib32 lib64 ; do
        if [[ -d $i ]] ; then
            mkdir -p usr/$i
            for l in $i/* ; do
                [[ -L $l ]] || { echo "$l is not a symlink! Bailing out..." ; exit 1; }
                ln -rs "$(readlink -f "$l")" usr/$l
            done
            rm -rf $i
            ln -sf usr/$i $i
        fi
    done
    ln -sT usr/bin bin
    ln -sf usr/lib lib
    ln -sT usr/sbin sbin

    # remove development stuff
    rm -rf usr/include
    find usr/lib -name '*.a' -o -name '*.o' -delete
    find . -not -path ./toolchain/sysroots -executable -type f -exec ${CROSS_COMPILE}strip -g {} \;

    # copy certificates
    mkdir -p etc/ssl/certs
    cp $<<sandbox/ca-certificates.crt>> etc/ssl/certs/ca-certificates.crt
    touch etc/resolv.conf

    # the sandbox uses "nobody" as user
    echo "nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin" > etc/passwd

    # Symlink all toolchain executables and make sure there exist a version
    # with the target triple.
    if [[ -d toolchain/bin ]] ; then
        pushd toolchain/bin
        for i in * ; do
            if [[ $i != ${AUTOCONF_HOST}* && ! -e ${AUTOCONF_HOST}-$i ]] ; then
                ln -s $i ${AUTOCONF_HOST}-$i
            fi
        done
        popd
    fi

packageScript: |
    cp -a $1/* .

provideSandbox:
    paths: ["/bin", "/usr/bin"]
    mount:
        - "/etc/resolv.conf"
        - "/dev/pts"

