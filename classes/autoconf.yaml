# For packages that patch configure.ac or the like. Call autoconfReconfigure
# after the patches were applied. This class will *not* detect all changes that
# may require another autoreconf invocation. That's up to the user.

# Prevent patching of ltmain.sh. This usually collides with autoreconf which
# recreates ltmain.sh.
privateEnvironment:
    APPLY_LIBTOOL_PATCH: "no"

checkoutDeterministic: True
checkoutTools: [autotools, m4]
checkoutSetup: |
    # Other classes can add paths to this array to pick up additional aclocal
    # m4 files.
    declare -a AUTOCONF_EXTRA_PKGS

    # Automatically gather other aclocal macros on standard path.
    for i in "$@" ; do
        if [[ -d "$i/usr/share/aclocal" ]] ; then
            AUTOCONF_EXTRA_PKGS+=( "$i/usr/share/aclocal" )
        fi
    done

    # Call autoreconf in current directory.
    #
    # Options: -a     Run "aclocal -I m4 --install" before autoreconf
    #          -A     Add argument to aclocal, replacing the default ones
    #          -u     Just update, no force install (remove "-fi" switch)
    autoconfReconfigure()
    {
        local AUTORECONF_FORCE=y
        local CALL_ACLOCAL=
        local ACLOCAL_ARGS=()

        # parse arguments
        OPTIND=1
        local opt
        while getopts "aA:u" opt ; do
            case "$opt" in
                a)
                    CALL_ACLOCAL=y
                    ;;
                A)
                    ACLOCAL_ARGS+=( "$OPTARG" )
                    ;;
                u)
                    AUTORECONF_FORCE=
                    ;;
                \?)
                  echo "Invalid option: -$OPTARG" >&2
                  exit 1
                  ;;
            esac
        done
        shift $(( OPTIND -1 ))

        if [[ ( ! -e configure ) || ( ! -e .autoreconf.stamp ) ||
              ( configure.ac -nt .autoreconf.stamp ) ]] ; then
            (
                # Work around a stupid perl limitation that does not retain
                # sub-second file timestamps when moving files across file
                # system boundaries. Make sure rename() always works.
                # Otherwise files may appear older than they are and trigger
                # reconfigurations in the build step.
                export TMPDIR="$BOB_CWD"

                # We don't want to retain any backups. Give them a unique
                # suffix so that they can be garbage collected.
                export SIMPLE_BACKUP_SUFFIX=.bob-backup

                # Autoreconf will not replace existing autoconf-archive macros
                # in the m4 directory. If that is needed, the recipe must
                # force the update.
                if [[ $CALL_ACLOCAL ]] ; then
                    if [[ -n "${ACLOCAL_ARGS[@]:+set}" ]] ; then
                        aclocal "${ACLOCAL_ARGS[@]}"
                    else
                        aclocal -I m4 --install
                    fi
                fi
                autoreconf -v ${AUTORECONF_FORCE:+-fi} \
                    ${AUTOCONF_EXTRA_PKGS[@]+"${AUTOCONF_EXTRA_PKGS[@]/#/-I}"}
            )
            rm -rf autom4te.cache
            find . -name '*.bob-backup' -delete
            touch .autoreconf.stamp
        fi
    }
