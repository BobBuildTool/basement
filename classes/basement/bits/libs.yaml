# Compute the desired library types: static, shared or both. The result depends
# on AUTOCONF_BUILD, AUTOCONF_HOST and BASEMENT_LIBS. The AUTOCONF_* variables
# are not included because some classes (autotools-noarch in particular) are
# not want to depend on them.

buildVars: [BASEMENT_LIBS]
buildSetup: &commonScript |
    # Check if we're officially cross-compiling
    basementBitsCrossCompiling()
    {
        if [[ "${AUTOCONF_BUILD:-unknown}" != "${AUTOCONF_HOST:-${AUTOCONF_BUILD:-unknown}}" ]]; then
            return 0 # cross compiling
        else
            return 1 # native build
        fi
    }

    # Get desired library type: "static", "shared" or "both".
    #
    # By default, shared libraries are built when cross-compiling and static
    # libraries on host builds (including the bob_compat cross-toolchain).
    # This can be overridden by setting BASEMENT_LIBS to "static", "shared" or
    # "both".
    basementBitsLibraryType()
    {
        if [[ -n "${BASEMENT_LIBS:-}" ]] ; then
            echo "$BASEMENT_LIBS"
        elif [[ "${AUTOCONF_HOST:-unknown}" != *bob_compat* ]] && basementBitsCrossCompiling ; then
            echo shared
        else
            echo static
        fi
    }

    # Check $BASEMENT_LIBS values to catch misconfigurations early
    case "${BASEMENT_LIBS:-__unset__}" in
        static | shared | both | __unset__)
            ;;
        *)
            echo "Invalid BASEMENT_LIBS value: $BASEMENT_LIBS" >&2
            exit 1
            ;;
    esac

packageSetup: *commonScript
