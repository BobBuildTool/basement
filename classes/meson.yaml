inherit: [install, pkg-config]

buildTools: [target-toolchain, meson, ninja]
buildVars: [AUTOCONF_BUILD, AUTOCONF_HOST, CPPFLAGS, CFLAGS, CXXFLAGS, LDFLAGS,
    CC, CXX, AR, STRIP]
buildScript: |
    # Set a generic utf-8 locale. Introduced by Debian and seems to work on
    # Fedora too. If not set meson will barf on the first non 7-bit ASCII
    # character.
    export LANG=C.UTF-8

    function meson_join_space { local IFS=" "; echo "$*"; }
    function meson_join_list { echo -n "'$1" ; shift ; printf "%s" "${@/#/\', \'}"; echo "'" ; }

    # Parse flags into clean arrays
    declare -a MESON_CFLAGS=( ${CFLAGS:-} ) # explicitly not quoted to split CFLAGS
    declare -a MESON_CXXFLAGS=( ${CXXFLAGS:-} ) # ditto
    declare -a MESON_LDFLAGS=( ${LDFLAGS:-} ) # guess what...

    # Gather all include and library paths.
    for i in "${@:2}" ; do
        if [[ -d "$i/usr/include" ]] ; then
            MESON_CFLAGS+=("-I$i/usr/include")
            MESON_CXXFLAGS+=("-I$i/usr/include")
        fi
        if [[ -d "$i/lib" ]] ; then
            MESON_LDFLAGS+=("-L$i/lib" "-Wl,-rpath-link=$i/lib")
        fi
        if [[ -d "$i/usr/lib" ]] ; then
            MESON_LDFLAGS+=("-L$i/usr/lib" "-Wl,-rpath-link=$i/usr/lib")
        fi
    done

    # For native build we pass CFLAGS, otherwise we have to pass them in
    # cross_file.txt
    if [[ "${AUTOCONF_BUILD:-unknown}" != "${AUTOCONF_HOST:-${AUTOCONF_BUILD:-unknown}}" ]]; then
        unset CFLAGS
        unset CXXFLAGS
        unset LDFLAGS

        cat >cross_file.txt <<EOF
    [binaries]
    c     = '$CC'
    cpp   = '$CXX'
    ar    = '$AR'
    strip = '$STRIP'
    [properties]
    c_args = [$(meson_join_list "${MESON_CFLAGS[@]}")]
    cpp_args = [$(meson_join_list "${MESON_CXXFLAGS[@]}")]
    c_link_args = [$(meson_join_list "${MESON_LDFLAGS[@]}")]
    cpp_link_args = [$(meson_join_list "${MESON_LDFLAGS[@]}")]
    EOF
    else
        export CFLAGS=$(meson_join_space "${MESON_CFLAGS[@]}")
        export CXXFLAGS=$(meson_join_space "${MESON_CXXFLAGS[@]}")
        export LDFLAGS=$(meson_join_space "${MESON_LDFLAGS[@]}")
    fi

    # $1 : source path
    mesonBuild()
    {
        mkdir -p build install
        pushd build
        if [[ ! -e .meson-done ]] ; then
            declare -a MESON_OPTIONS=( "$1" "$PWD")
            if [[ -e $BOB_CWD/cross_file.txt ]] ; then
                MESON_OPTIONS+=("--cross-file" "$BOB_CWD/cross_file.txt")
            else
                MESON_OPTIONS+=("-Ddefault_library=static")
            fi
            MESON_OPTIONS+=( --prefix /usr --libdir lib --buildtype plain )
            MESON_OPTIONS+=( "${@:2}" )
            meson "${MESON_OPTIONS[@]}"
            touch .meson-done
        fi
        DESTDIR="$PWD/../install" ninja install
        popd
    }

packageScript: |
   _MESON_BUILD_PATH=$1

    mesonPackageBin()
    {
        installPackageBin "${1:-${_MESON_BUILD_PATH}}/install/" "${@:2}"
    }

    mesonPackageDev()
    {
        installPackageDev "${1:-${_MESON_BUILD_PATH}}/install/" "${@:2}"
    }

    mesonPackageLib()
    {
        installPackageLib "${1:-${_MESON_BUILD_PATH}}/install/" "${@:2}"
    }

    mesonPackageTgt()
    {
        installPackageTgt "${1:-${_MESON_BUILD_PATH}}/install/" "${@:2}"
    }
