buildSetup: |
    # Updates a kconfig option
    #
    # $1: option (e.g. ENABLE_FOO)
    # $2: replacement (e.g. "ENABLE_FOO=y" or "# ENABLE_FOO is not set")
    # $3: kconfig-file (optional, defaults to ".config")
    kconfigUpdate()
    {
        sed -e "/^# $1 is not set/d" -e "/^$1=/d" -i "${3:-.config}"
        echo "$2" >> "${3:-.config}"
    }

    # Enables a kconfig option
    #
    # $1: option
    # $2: kconfig-file (optional, defaults to ".config")
    kconfigEnable()
    {
        kconfigUpdate "$1" "$1=y" "${2:-.config}"
    }

    # Disables a kconfig option
    #
    # $1: option
    # $2: kconfig-file (optional, defaults to ".config")
    kconfigDisable()
    {
        kconfigUpdate "$1" "# $1 is not set" "${2:-.config}"
    }

    # Enables/disables a kconfig option
    #
    # $1: option
    # $2: value ("n" or "0" -> disable, "y" or "1" -> enable)
    # $3: kconfig-file (optional, defaults to ".config")
    kconfigSetBool()
    {
        case "$2" in
            n|0)
                kconfigDisable "$1" "${3:-.config}"
                ;;
            y|1)
                kconfigEnable "$1" "${3:-.config}"
                ;;
            *)
                echo "kconfigSetBool: invalid value '$2'" >&2
                exit 1
        esac
    }

    # Checks if a kconfig option is set
    #
    # $1: option (e.g. ENABLE_FOO)
    # $2: kconfig-file (optional, defaults to ".config")
    kconfigIsSet()
    {
        grep -qE "^$1=y$" "${2:-.config}"
    }
