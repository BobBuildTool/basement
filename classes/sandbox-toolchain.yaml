packageVars: [AUTOCONF_BUILD, SANDBOX_AUTOCONF_BUILD]
packageScript: |
    # If we are not in a sandbox do a quich check if gcc is around and that
    # it's a compatible compiler. This will only do its job if the user builds
    # on his machine and does not download this as an artifact. Still better
    # than nothing...
    if [[ ! -e /bob || ! -e /toolchain/bin ]] ; then
        GCC_MACHINE="$(gcc -dumpmachine)"
        case "$AUTOCONF_BUILD" in
            "$GCC_MACHINE")
                ;;
            i[34567]86-*linux-gnu)
                if [[ $GCC_MACHINE != i[34567]86-*linux-gnu ]] ; then
                    echo "Expected a compatible i386 host compiler!" >&2
                    exit 1
                fi
                ;;
            x86_64-*linux-gnu)
                if [[ $GCC_MACHINE != x86_64-*linux-gnu ]] ; then
                    echo "Expected a compatible x86_64 host compiler!" >&2
                    exit 1
                fi
                ;;
            *)
                echo "Expected a compatible ($AUTOCONF_BUILD) host compiler!" >&2
                exit 1
        esac
    fi

    # Create a wrapper scripts that prefer the right executable in /toolchain
    # and (if we are outside of a sandbox) fall back to globally installed
    # versions.
    for i in addr2line ar as c++ c++filt cpp elfedit g++ gcc gcov gdb gprof ld nm objcopy objdump ranlib readelf size strings strip ; do
        ln -sf /toolchain/bin/$i
        cat >${SANDBOX_AUTOCONF_BUILD}-$i <<EOF
    #!/bin/bash
    [[ -x "/toolchain/bin/${SANDBOX_AUTOCONF_BUILD}-$i" ]] && exec "/toolchain/bin/${SANDBOX_AUTOCONF_BUILD}-$i" "\$@"
    type -p "${AUTOCONF_BUILD}-$i" >/dev/null && exec "${AUTOCONF_BUILD}-$i" "\$@"
    exec $i "\$@"
    EOF
    done

    # make all scripts executable
    chmod +x ${SANDBOX_AUTOCONF_BUILD}-*

provideTools:
    host-toolchain: "."
    target-toolchain: "."

provideVars:
    # usual compiler variables
    AR: "ar"
    AS: "as"
    CC: "gcc"
    CPP: "cpp"
    CXX: "g++"
    GDB: "gdb"
    LD: "ld"
    NM: "nm"
    OBJCOPY: "objcopy"
    OBJDUMP: "objdump"
    RANLIB: "ranlib"
    STRIP: "strip"

    # Some meta variables do not change: ARCH, AUTOCONF_BUILD, AUTOCONF_HOST
    AUTOCONF_BUILD: "${SANDBOX_AUTOCONF_BUILD}"
    AUTOCONF_HOST:  "${SANDBOX_AUTOCONF_HOST}"
    CROSS_COMPILE: ""
    TOOLCHAIN_SYSROOT: ""

    # compiler flags
    CPPFLAGS:   "-Wdate-time"
    CFLAGS:     "-O${BASEMENT_OPTIMIZE}$(if-then-else,${BASEMENT_DEBUG}, -g,) -pipe"
    CXXFLAGS:   "-O${BASEMENT_OPTIMIZE}$(if-then-else,${BASEMENT_DEBUG}, -g,) -pipe"
    LDFLAGS:    "-Wl,-O1 -Wl,--hash-style=gnu"
